# Copy this file to .env and fill in your actual values

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Secret key for session management and security (REQUIRED in production)
SECRET_KEY=your-secret-key-change-in-production-use-long-random-string

# Debug mode (set to false in production)
DEBUG=false

# Application port
PORT=8000

# Default timezone for the application
DEFAULT_TIMEZONE=UTC

# =============================================================================
# DATABASE SETTINGS
# =============================================================================

# Database URL (SQLite for development, consider PostgreSQL for production)
DATABASE_URL=sqlite:///./data/booking.db

# For PostgreSQL (uncomment and configure if using PostgreSQL):
# DATABASE_URL=postgresql://username:password@localhost:5432/booking_db

# =============================================================================
# OIDC AUTHENTICATION (Optional - can be configured via admin panel)
# =============================================================================

# OIDC Provider settings (these can also be configured through the admin interface)
OIDC_CLIENT_ID=your-oidc-client-id
OIDC_CLIENT_SECRET=your-oidc-client-secret
OIDC_ISSUER=https://your-oidc-provider.com

# =============================================================================
# EMAIL CONFIGURATION (Optional - can be configured via admin panel)
# =============================================================================

# SendGrid API settings for email notifications
SENDGRID_API_KEY=your-sendgrid-api-key
FROM_EMAIL=noreply@yourdomain.com
FROM_NAME=Booking System

# Alternative: For testing/development you can use SendGrid's sandbox mode
# SENDGRID_SANDBOX_MODE=true

# =============================================================================
# OPTIONAL POSTGRESQL SETTINGS (for docker-compose with PostgreSQL)
# =============================================================================

# PostgreSQL database password (used by docker-compose when PostgreSQL is enabled)
POSTGRES_PASSWORD=your-secure-postgres-password

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# CORS settings (comma-separated list of allowed origins)
# ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com

# Cookie settings
# COOKIE_SECURE=true  # Set to true when using HTTPS
# COOKIE_SAMESITE=lax

# =============================================================================
# LOGGING SETTINGS
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path (optional, logs to console if not set)
# LOG_FILE=/app/logs/booking.log

# =============================================================================
# BACKUP SETTINGS
# =============================================================================

# Backup configuration (can also be set via admin panel)
# BACKUP_ENABLED=true
# BACKUP_FREQUENCY=daily
# BACKUP_RETENTION_DAYS=30
# BACKUP_PATH=/app/data/backups

# =============================================================================
# SCHEDULER SETTINGS
# =============================================================================

# Background task scheduler settings
# SCHEDULER_ENABLED=true
# SCHEDULER_TIMEZONE=UTC

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development mode settings (only for development)
# RELOAD=true
# WORKERS=1

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================

# Production-specific settings
# WORKERS=4
# MAX_CONNECTIONS=1000
# KEEP_ALIVE=2
